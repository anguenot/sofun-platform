<!--
  Plugin descriptor for FindBugs "core" plugin.
  This plugin is enabled by default.
-->
<FindbugsPlugin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   				xsi:noNamespaceSchemaLocation="findbugsplugin.xsd"
				pluginid="edu.umd.cs.findbugs.plugins.core"
                defaultenabled="true"
                provider="FindBugs project" 
                website="http://findbugs.sourceforge.net"
                >
				
  <OrderingConstraints>
	<!--
		NoteSuppressedWarnings should be run in
		an earlier pass than all reporting detectors, including those in
		other plugins.
	-->
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings"/>
		<LaterCategory name="reporting" spanplugins="true"/>
	</SplitPass>
	
	<!--
		NoteSyntheticElements must be run before any plugin that uses
		AnnotationDatabases.
	-->
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteSyntheticElements"/>
		<LaterSubtypes super="edu.umd.cs.findbugs.UseAnnotationDatabase" spanplugins="true"/>
	</SplitPass>

	<!-- NoteCheckReturnValue should happen in an earlier pass than BCPMethodReturnCheck. -->
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteAnnotationRetention"/>
		<Later class="edu.umd.cs.findbugs.detect.DumbMethods"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteCheckReturnValue"/>
		<Later class="edu.umd.cs.findbugs.detect.BCPMethodReturnCheck"/>
	</SplitPass>

<!--
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.Methods"/>
		<Later class="edu.umd.cs.findbugs.detect.CalledMethods"/>
	</SplitPass>
-->
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.CalledMethods"/>
		<Later class="edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.Methods"/>
		<Later class="edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations"/>
		<Later class="edu.umd.cs.findbugs.detect.MethodReturnCheck"/>
	</SplitPass>
	<!-- NoteNonNullAnnotations, NoteUnconditionalParamDerefs
		 should happen in an earlier pass than FindNullDeref. -->	
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteNonNullAnnotations"/>
		<Later class="edu.umd.cs.findbugs.detect.TrainUnconditionalDerefParams"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteNonNullAnnotations"/>
		<Later class="edu.umd.cs.findbugs.detect.FindNullDeref"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteJCIPAnnotation"/>
		<Later class="edu.umd.cs.findbugs.detect.FindInconsistentSync2"/>
	</SplitPass>
	<WithinPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"/>
		<Later class="edu.umd.cs.findbugs.detect.FindNullDeref"/>
	</WithinPass>
	<WithinPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues"/>
		<Later class="edu.umd.cs.findbugs.detect.FindNullDeref"/>
	</WithinPass>
	<WithinPass>
		<Earlier class="edu.umd.cs.findbugs.detect.UnreadFields"/>
		<Later class="edu.umd.cs.findbugs.detect.FindMaskedFields"/>
	</WithinPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteNonNullAnnotations"/>
		<Later class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"/>
	</SplitPass>
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.Methods"/>
		<Later class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"/>
	</SplitPass>
	
	<!-- NoteUnconditionalParamDerefs should come before FindBadEqualsImplementation. -->
	<SplitPass>
		<Earlier class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"/>
		<Later class="edu.umd.cs.findbugs.detect.FindBadEqualsImplementation"/>
	</SplitPass>
  </OrderingConstraints>
				
  <Detector class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" 
	        speed="fast"
	        reports=""
			hidden="true" /> 
  <Detector class="edu.umd.cs.findbugs.detect.NoteAnnotationRetention" 
	        speed="fast"
	        reports=""
			hidden="true" /> 
  <Detector class="edu.umd.cs.findbugs.detect.NoteSyntheticElements"
            speed="fast"
            reports=""
            hidden="true"/>
	      
  <Detector class="edu.umd.cs.findbugs.detect.SynchronizeAndNullCheckField"
			speed="moderate"
			reports="NP_SYNC_AND_NULL_CHECK_FIELD" 
			hidden="false"/>
	       
  <Detector class="edu.umd.cs.findbugs.detect.NoteJCIPAnnotation"
                speed="fast"
                reports=""
                hidden="true" />
                 
  <Detector class="edu.umd.cs.findbugs.detect.Methods" 
	        speed="fast"
	        reports=""
			disabled="false"
			hidden="true" /> 

  <Detector class="edu.umd.cs.findbugs.detect.CalledMethods" 
	        speed="fast"
	        reports=""
			disabled="false"
			hidden="true" /> 
			
  <Detector class="edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod" 
	        speed="moderate"
	        reports="IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD"
			disabled="false"
			hidden="false" /> 
	        
  <Detector class="edu.umd.cs.findbugs.detect.NoteCheckReturnValue" 
	        speed="fast"
	        reports=""
            hidden="true" /> 
  <Detector class="edu.umd.cs.findbugs.detect.SynchronizationOnSharedBuiltinConstant" 
	        speed="fast"
	        reports="DL_SYNCHRONIZATION_ON_SHARED_CONSTANT"
            hidden="true" /> 
 <Detector class="edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations" 
	        speed="fast"
	        reports=""
	        requirejre="1.5"
            hidden="true" /> 
  <Detector class="edu.umd.cs.findbugs.detect.NoteNonNullAnnotations"
            speed="fast"
            reports=""
			hidden="true"/>

  <Detector class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"
	        speed="slow"
	        reports=""
	        hidden="true"/>

  <Detector class="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues"
	        speed="slow"
	        reports=""
	        hidden="true"/>

	        
  <Detector class="edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop" 
	        speed="fast"
            reports="IL_INFINITE_RECURSIVE_LOOP,IL_CONTAINER_ADDED_TO_ITSELF" /> 

  <Detector class="edu.umd.cs.findbugs.detect.InfiniteLoop" 
	        speed="fast"
            reports="IL_INFINITE_LOOP" /> 

  <Detector class="edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop2"
            speed="slow"
            reports="IL_INFINITE_RECURSIVE_LOOP,IL_CONTAINER_ADDED_TO_ITSELF"
            disabled="true"/>
            
  <Detector class="edu.umd.cs.findbugs.detect.VolatileUsage" 
	        speed="fast"
            reports="VO_VOLATILE_REFERENCE_TO_ARRAY" /> 
            
  <Detector class="edu.umd.cs.findbugs.detect.InheritanceUnsafeGetResource" 
	        speed="fast"
            reports="UI_INHERITANCE_UNSAFE_GETRESOURCE" /> 
            
  <Detector class="edu.umd.cs.findbugs.detect.EmptyZipFileEntry" 
	        speed="moderate"
            reports="AM_CREATES_EMPTY_ZIP_FILE_ENTRY,AM_CREATES_EMPTY_JAR_FILE_ENTRY" />
          
 <Detector class="edu.umd.cs.findbugs.detect.DoInsideDoPrivileged" 
            speed="fast"
            reports="DP_DO_INSIDE_DO_PRIVILEGED,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED"/>  
  <Detector class="edu.umd.cs.findbugs.detect.HugeSharedStringConstants" 
            speed="fast"
            reports="HSC_HUGE_SHARED_STRING_CONSTANT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FinalizerNullsFields"
  			speed="fast"
  			reports="FI_FINALIZER_NULLS_FIELDS,FI_FINALIZER_ONLY_NULLS_FIELDS" />
  			
  <Detector class="edu.umd.cs.findbugs.detect.TestingGround" 
            speed="fast"
            reports="TESTING"
            disabled="true"
            hidden="true" />
  <Detector class="edu.umd.cs.findbugs.detect.ResolveAllReferences" 
            speed="fast"
            reports="VR_UNRESOLVABLE_REFERENCE"
            disabled="true"
            hidden="true" />
            
  <Detector class="edu.umd.cs.findbugs.detect.CheckImmutableAnnotation" 
	        speed="fast"
            reports="JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS" />
  <Detector class="edu.umd.cs.findbugs.detect.DontCatchIllegalMonitorStateException" 
	        speed="fast"
            reports="IMSE_DONT_CATCH_IMSE" />

  <Detector class="edu.umd.cs.findbugs.detect.FindFloatMath"
            speed="moderate" 
	        disabled="true"
			hidden="true"
            reports="FL_MATH_USING_FLOAT_PRECISION" />
            
  <Detector class="edu.umd.cs.findbugs.detect.CloneIdiom" 
            speed="fast" 
            reports="CN_IDIOM,CN_IDIOM_NO_SUPER_CALL" />
            
  <Detector class="edu.umd.cs.findbugs.detect.ComparatorIdiom" 
            speed="fast" 
            reports="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindFieldSelfAssignment" 
            speed="fast"
            reports="SA_FIELD_SELF_ASSIGNMENT,SA_LOCAL_DOUBLE_ASSIGNMENT" />
  <Detector class="edu.umd.cs.findbugs.detect.FindSelfComparison" 
            speed="fast"
            reports="SA_FIELD_SELF_COMPARISON,SA_LOCAL_SELF_COMPARISON,SA_FIELD_SELF_COMPUTATION,SA_LOCAL_SELF_COMPUTATION,SA_FIELD_DOUBLE_ASSIGNMENT" />
  <Detector class="edu.umd.cs.findbugs.detect.FindSelfComparison2" 
            speed="fast"
            reports="SA_FIELD_SELF_COMPARISON,SA_LOCAL_SELF_COMPARISON,SA_FIELD_SELF_COMPUTATION,SA_LOCAL_SELF_COMPUTATION" />
            
  <Detector class="edu.umd.cs.findbugs.detect.DroppedException" 
            speed="fast"
            reports="DE_MIGHT_DROP,DE_MIGHT_IGNORE" />
            
  <Detector class="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" 
            speed="fast"
            disabled="false"
            reports="NP_LOAD_OF_KNOWN_NULL_VALUE"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.DumbMethodInvocations" 
            speed="fast"
            disabled="false"
            reports="DMI_USELESS_SUBSTRING,DMI_HARDCODED_ABSOLUTE_FILENAME"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.URLProblems" 
            speed="fast"
            reports="DMI_BLOCKING_METHODS_ON_URL,DMI_COLLECTION_OF_URLS"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.DumbMethods" 
            speed="fast"
            reports="NP_IMMEDIATE_DEREFERENCE_OF_READLINE,RV_01_TO_INT,DM_RUN_FINALIZERS_ON_EXIT,DM_STRING_CTOR,DM_STRING_VOID_CTOR,DM_STRING_TOSTRING,DM_GC,DM_BOOLEAN_CTOR,DM_STRING_EMPTY_EQUALS,DM_EXIT,DM_CONVERT_CASE,SW_SWING_METHODS_INVOKED_IN_SWING_THREAD,DM_BOXED_PRIMITIVE_TOSTRING,DM_NEW_FOR_GETCLASS,DM_NEXTINT_VIA_NEXTDOUBLE,DM_USELESS_THREAD,DM_MONITOR_WAIT_ON_CONDITION,DMI_CALLING_NEXT_FROM_HASNEXT,RV_REM_OF_HASHCODE,RV_REM_OF_RANDOM_INT,RV_ABSOLUTE_VALUE_OF_RANDOM_INT,RV_ABSOLUTE_VALUE_OF_HASHCODE,BIT_IOR_OF_SIGNED_BYTE,INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE,INT_BAD_COMPARISON_WITH_SIGNED_BYTE,INT_BAD_REM_BY_1,DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION,INT_VACUOUS_COMPARISON,BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS,DMI_RANDOM_USED_ONLY_ONCE,DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT,DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED" />

  <Detector class="edu.umd.cs.findbugs.detect.NumberConstructor"
            speed="fast"
            disabled="false"
            reports="DM_NUMBER_CTOR,DM_FP_NUMBER_CTOR" />

  <Detector class="edu.umd.cs.findbugs.detect.FindSqlInjection" 
            speed="moderate"
            reports="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" 
	    	disabled="false"
		/>

  <Detector class="edu.umd.cs.findbugs.detect.FindDoubleCheck" 
            speed="fast"
            reports="DC_DOUBLECHECK" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindFinalizeInvocations" 
            speed="fast"
            reports="FI_PUBLIC_SHOULD_BE_PROTECTED,FI_EMPTY,FI_NULLIFY_SUPER,FI_USELESS,FI_MISSING_SUPER_CALL,FI_EXPLICIT_INVOCATION" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindHEmismatch" 
            speed="fast"
            reports="EQ_DONT_DEFINE_EQUALS_FOR_ENUM,EQ_SELF_USE_OBJECT,EQ_SELF_NO_OBJECT,CO_SELF_NO_OBJECT,HE_HASHCODE_USE_OBJECT_EQUALS,HE_HASHCODE_NO_EQUALS,HE_EQUALS_USE_HASHCODE,HE_EQUALS_NO_HASHCODE,HE_INHERITS_EQUALS_USE_HASHCODE,CO_ABSTRACT_SELF,EQ_ABSTRACT_SELF,HE_USE_OF_UNHASHABLE_CLASS,EQ_COMPARETO_USE_OBJECT_EQUALS" />

  <Detector class="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" 
            speed="fast"
            reports="EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC"/>

  <Detector class="edu.umd.cs.findbugs.detect.FindNakedNotify" 
            speed="fast"
            reports="NN_NAKED_NOTIFY" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindReturnRef" 
            speed="fast"
            reports="MS_EXPOSE_REP,EI_EXPOSE_REP,EI_EXPOSE_REP2,EI_EXPOSE_STATIC_REP2" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindRunInvocations" 
            speed="fast"
            reports="RU_INVOKE_RUN" />
            
  <Detector class="edu.umd.cs.findbugs.detect.SwitchFallthrough" 
            speed="fast"
            reports="SF_SWITCH_FALLTHROUGH,SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindSpinLoop" 
            speed="fast"
            reports="SP_SPIN_ON_FIELD" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindNonShortCircuit" 
            speed="fast"
            reports="NS_NON_SHORT_CIRCUIT,NS_DANGEROUS_NON_SHORT_CIRCUIT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindTwoLockWait" 
            speed="slow"
            reports="TLW_TWO_LOCK_WAIT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindUnconditionalWait" 
            speed="fast" reports="UW_UNCOND_WAIT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindUninitializedGet" 
            speed="fast"
            reports="UR_UNINIT_READ" />
            
  <Detector class="edu.umd.cs.findbugs.detect.DontUseEnum"
            speed="fast"
            reports="NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER,NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindUnsyncGet" 
            speed="fast"
            reports="UG_SYNC_SET_UNSYNC_GET" />
            
  <Detector class="edu.umd.cs.findbugs.detect.InitializationChain" 
            speed="fast"
            reports="SI_INSTANCE_BEFORE_FINALS_ASSIGNED,IC_INIT_CIRCULARITY" />
            
  <Detector class="edu.umd.cs.findbugs.detect.IteratorIdioms" 
            speed="fast"
            reports="IT_NO_SUCH_ELEMENT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.LockedFields" 
            speed="fast" 
            disabled="true"
			hidden="true"
            reports="IS_INCONSISTENT_SYNC" />
            
  <Detector class="edu.umd.cs.findbugs.detect.PreferZeroLengthArrays" 
            speed="fast"
            reports="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
            
  <Detector class="edu.umd.cs.findbugs.detect.EqStringTest" 
            speed="fast" 
            disabled="true"
			hidden="true"
            reports="ES_COMPARING_STRINGS_WITH_EQ" />
            
  <Detector class="edu.umd.cs.findbugs.detect.MutableLock" 
            speed="fast"
            reports="ML_SYNC_ON_UPDATED_FIELD" />
            
  <Detector class="edu.umd.cs.findbugs.detect.MutableStaticFields" 
            speed="fast"
            reports="MS_OOI_PKGPROTECT,MS_FINAL_PKGPROTECT,MS_SHOULD_BE_FINAL,MS_PKGPROTECT,MS_MUTABLE_HASHTABLE,MS_MUTABLE_ARRAY,MS_CANNOT_BE_FINAL" />
            
  <Detector class="edu.umd.cs.findbugs.detect.Naming" 
            speed="fast"
            reports="NM_VERY_CONFUSING,NM_VERY_CONFUSING_INTENTIONAL,NM_CONFUSING,NM_METHOD_CONSTRUCTOR_CONFUSION,NM_LCASE_HASHCODE,NM_LCASE_TOSTRING,NM_BAD_EQUAL,NM_CLASS_NAMING_CONVENTION,NM_FIELD_NAMING_CONVENTION,NM_METHOD_NAMING_CONVENTION,NM_CLASS_NOT_EXCEPTION" />
            
  <Detector class="edu.umd.cs.findbugs.detect.ReadReturnShouldBeChecked" 
            speed="fast"
            reports="RR_NOT_CHECKED,SR_NOT_CHECKED" />
            
  <Detector class="edu.umd.cs.findbugs.detect.SerializableIdiom" 
            speed="fast"
            reports="SE_NO_SERIALVERSIONID,SE_METHOD_MUST_BE_PRIVATE,WS_WRITEOBJECT_SYNC,RS_READOBJECT_SYNC,SE_INNER_CLASS,SE_BAD_FIELD,SE_BAD_FIELD_STORE,SE_NONLONG_SERIALVERSIONID,SE_NONSTATIC_SERIALVERSIONID,SE_NONFINAL_SERIALVERSIONID,SE_NO_SUITABLE_CONSTRUCTOR,SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION,SE_READ_RESOLVE_MUST_RETURN_OBJECT,SE_TRANSIENT_FIELD_NOT_RESTORED,SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS,SE_BAD_FIELD_INNER_CLASS" />
            
  <Detector class="edu.umd.cs.findbugs.detect.StartInConstructor" 
            speed="fast"
            reports="SC_START_IN_CTOR" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindBadForLoop" 
            speed="fast"
            reports="QF_QUESTIONABLE_FOR_LOOP"
		/>
  <Detector class="edu.umd.cs.findbugs.detect.UnreadFields" 
            speed="fast"
            reports="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,NP_UNWRITTEN_FIELD,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,UWF_NULL_FIELD,UWF_UNWRITTEN_FIELD,SS_SHOULD_BE_STATIC,UUF_UNUSED_FIELD,URF_UNREAD_FIELD,SIC_INNER_SHOULD_BE_STATIC,SIC_INNER_SHOULD_BE_STATIC_ANON,SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" />
            
  <Detector class="edu.umd.cs.findbugs.detect.WaitInLoop" 
            speed="fast"
            reports="WA_NOT_IN_LOOP,WA_AWAIT_NOT_IN_LOOP,NO_NOTIFY_NOT_NOTIFYALL" />
            
  <Detector class="edu.umd.cs.findbugs.detect.BCPMethodReturnCheck" 
            speed="slow"
            reports="RV_RETURN_VALUE_IGNORED2"
            disabled="true"
            hidden="true"
		 />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindNullDeref" 
            speed="slow"
            reports="NP_TOSTRING_COULD_RETURN_NULL,NP_CLONE_COULD_RETURN_NULL,NP_ALWAYS_NULL_EXCEPTION,NP_ALWAYS_NULL,NP_STORE_INTO_NONNULL_FIELD,NP_NULL_ON_SOME_PATH_EXCEPTION,NP_NULL_ON_SOME_PATH,NP_NULL_PARAM_DEREF_NONVIRTUAL,NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS,NP_NULL_PARAM_DEREF,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES,RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE,NP_NONNULL_PARAM_VIOLATION,NP_NONNULL_RETURN_VIOLATION,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,NP_GUARANTEED_DEREF,NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH,NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT,NP_ARGUMENT_MIGHT_BE_NULL" />

  <Detector class="edu.umd.cs.findbugs.detect.FindOpenStream" 
            speed="slow"
            reports="OS_OPEN_STREAM,OS_OPEN_STREAM_EXCEPTION_PATH,ODR_OPEN_DATABASE_RESOURCE,ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindUselessControlFlow" 
            speed="fast"
            reports="UCF_USELESS_CONTROL_FLOW,UCF_USELESS_CONTROL_FLOW_NEXT_LINE" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindUnreleasedLock" 
            speed="moderate"
            requirejre="1.5"
            reports="UL_UNRELEASED_LOCK,UL_UNRELEASED_LOCK_EXCEPTION_PATH" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindRefComparison" 
            speed="slow"
            reports="ES_COMPARING_STRINGS_WITH_EQ,ES_COMPARING_PARAMETER_STRING_WITH_EQ,RC_REF_COMPARISON,EC_UNRELATED_TYPES,EC_NULL_ARG,EC_UNRELATED_CLASS_AND_INTERFACE,EC_UNRELATED_INTERFACES,EC_ARRAY_AND_NONARRAY,EC_BAD_ARRAY_COMPARE" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindMismatchedWaitOrNotify" 
            speed="moderate"
            reports="MWN_MISMATCHED_WAIT,MWN_MISMATCHED_NOTIFY" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindEmptySynchronizedBlock" 
            speed="fast"
            reports="ESync_EMPTY_SYNC" />

  <Detector class="edu.umd.cs.findbugs.detect.FindInconsistentSync2" 
            speed="slow"
            reports="IS2_INCONSISTENT_SYNC,IS_FIELD_NOT_GUARDED" />

  <Detector class="edu.umd.cs.findbugs.detect.FindLocalSelfAssignment2" 
            speed="fast" 
            reports="SA_LOCAL_SELF_ASSIGNMENT" />
            
  <Detector class="edu.umd.cs.findbugs.detect.IncompatMask" 
            speed="fast"
            reports="BIT_AND,BIT_AND_ZZ,BIT_IOR" />
            
  <Detector class="edu.umd.cs.findbugs.detect.LazyInit" 
            speed="moderate"
            reports="LI_LAZY_INIT_STATIC" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindJSR166LockMonitorenter" 
            speed="moderate" 
            requirejre="1.5"
            reports="JLM_JSR166_LOCK_MONITORENTER" />

  <Detector class="edu.umd.cs.findbugs.detect.FindUncalledPrivateMethods" 
            speed="fast"
            reports="UPM_UNCALLED_PRIVATE_METHOD" />
            
  <Detector class="edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass" 
            speed="fast"
            reports="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS" />
            
  <Detector class="edu.umd.cs.findbugs.detect.StringConcatenation" 
            speed="fast"
            reports="SBSC_USE_STRINGBUFFER_CONCATENATION" />
            
  <Detector class="edu.umd.cs.findbugs.detect.InefficientToArray" 
            speed="fast"
            reports="ITA_INEFFICIENT_TO_ARRAY" />
            
   <Detector class="edu.umd.cs.findbugs.detect.InvalidJUnitTest" 
             speed="fast"
             reports="IJU_SETUP_NO_SUPER,IJU_TEARDOWN_NO_SUPER,IJU_SUITE_NOT_STATIC,IJU_NO_TESTS,IJU_BAD_SUITE_METHOD" />
             
   <Detector class="edu.umd.cs.findbugs.detect.BadlyOverriddenAdapter" 
             speed="fast"
             reports="BOA_BADLY_OVERRIDDEN_ADAPTER" />
             
   <Detector class="edu.umd.cs.findbugs.detect.BadResultSetAccess" 
             speed="fast"
   	         reports="SQL_BAD_RESULTSET_ACCESS,SQL_BAD_PREPARED_STATEMENT_ACCESS" />
   	         
   <Detector class="edu.umd.cs.findbugs.detect.SuperfluousInstanceOf" 
             speed="fast"
   	         reports="SIO_SUPERFLUOUS_INSTANCEOF" />  
   	         
   <Detector class="edu.umd.cs.findbugs.detect.BadAppletConstructor" 
             speed="fast"
             reports="BAC_BAD_APPLET_CONSTRUCTOR" 
             disabled="true" /> 
             
   <Detector class="edu.umd.cs.findbugs.detect.UseObjectEquals" 
             speed="fast"
             reports="UOE_USE_OBJECT_EQUALS"
             disabled="true" />
             
   <Detector class="edu.umd.cs.findbugs.detect.SuspiciousThreadInterrupted" 
             speed="fast"
             reports="STI_INTERRUPTED_ON_CURRENTTHREAD,STI_INTERRUPTED_ON_UNKNOWNTHREAD" />

  <Detector class="edu.umd.cs.findbugs.detect.FindDeadLocalStores"
            speed="moderate"
            reports="DLS_DEAD_LOCAL_STORE,IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN,DLS_DEAD_LOCAL_STORE_OF_NULL" />
            
  <Detector class="edu.umd.cs.findbugs.detect.FindMaskedFields"
            speed="fast"
            reports="MF_METHOD_MASKS_FIELD,MF_CLASS_MASKS_FIELD" />
            
  <Detector class="edu.umd.cs.findbugs.detect.WrongMapIterator" 
            speed="fast"
            reports="WMI_WRONG_MAP_ITERATOR" />
            
  <Detector class="edu.umd.cs.findbugs.detect.InstantiateStaticClass"
  			speed="fast"
  			reports="ISC_INSTANTIATE_STATIC_CLASS" />

  <Detector class="edu.umd.cs.findbugs.detect.RuntimeExceptionCapture"
            reports="REC_CATCH_EXCEPTION"
            speed="fast" />

  <Detector class="edu.umd.cs.findbugs.detect.FindFloatEquality" 
            speed="fast"
            reports="FE_FLOATING_POINT_EQUALITY,FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER"/>

  <Detector class="edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation"
            speed="slow"
            reports="OS_OPEN_STREAM"
			hidden="true"
            disabled="true"/>

  <Detector class="edu.umd.cs.findbugs.detect.UnnecessaryMath" 
  			speed="fast"
			reports="UM_UNNECESSARY_MATH"/>

  <Detector class="edu.umd.cs.findbugs.detect.FindCircularDependencies" 
  			speed="moderate"
			disabled="true"
			reports="CD_CIRCULAR_DEPENDENCY"/>
			
  <Detector class="edu.umd.cs.findbugs.detect.RedundantInterfaces"
  			speed="fast"
  			reports="RI_REDUNDANT_INTERFACES"/>

  <Detector class="edu.umd.cs.findbugs.detect.MultithreadedInstanceAccess"
  			speed="fast"
  			reports="MTIA_SUSPECT_STRUTS_INSTANCE_FIELD,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD"/>
  			
  <Detector class="edu.umd.cs.findbugs.detect.PublicSemaphores"
  			speed="fast"
			disabled="true"
  			reports="PS_PUBLIC_SEMAPHORES"/>

  <Detector class="edu.umd.cs.findbugs.detect.BadUseOfReturnValue"
            speed="fast"
            reports="RV_CHECK_FOR_POSITIVE_INDEXOF,RV_DONT_JUST_NULL_CHECK_READLINE" />

  <Detector class="edu.umd.cs.findbugs.detect.MethodReturnCheck"
            speed="fast"
            reports="RV_RETURN_VALUE_IGNORED"
		/>
  
  <Detector class="edu.umd.cs.findbugs.detect.IDivResultCastToDouble"
            speed="fast"
            reports="ICAST_IDIV_CAST_TO_DOUBLE,ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL,ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND" />
  			
  <Detector class="edu.umd.cs.findbugs.detect.FindBadCast"
            speed="fast"
            disabled="true"
            hidden="true"
            reports="BC_BAD_CAST_TO_CONCRETE_COLLECTION,BC_BAD_CAST_TO_ABSTRACT_COLLECTION,BC_UNCONFIRMED_CAST,BC_IMPOSSIBLE_CAST,BC_IMPOSSIBLE_INSTANCEOF"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.FindBadCast2"
            speed="fast"
            reports="BC_BAD_CAST_TO_CONCRETE_COLLECTION,BC_BAD_CAST_TO_ABSTRACT_COLLECTION,BC_UNCONFIRMED_CAST,BC_IMPOSSIBLE_CAST,BC_IMPOSSIBLE_INSTANCEOF,BC_VACUOUS_INSTANCEOF,NP_NULL_INSTANCEOF"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.FindNonSerializableStoreIntoSession"
            speed="fast"
            reports="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.FindNonSerializableValuePassedToWriteObject"
            speed="fast"
            reports="DMI_NONSERIALIZABLE_OBJECT_WRITTEN"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.BadSyntaxForRegularExpression"
            speed="fast"
            reports="RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION,RE_POSSIBLE_UNINTENDED_PATTERN,RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.VarArgsProblems"
            speed="fast"
            reports="VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG"
	    />
  <Detector class="edu.umd.cs.findbugs.detect.FindPuzzlers"
            speed="fast"
            reports="EC_BAD_ARRAY_COMPARE,DLS_OVERWRITTEN_INCREMENT,ICAST_BAD_SHIFT_AMOUNT,ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT,DMI_BAD_MONTH,IM_MULTIPLYING_RESULT_OF_IREM,IM_BAD_CHECK_FOR_ODD,DMI_INVOKING_TOSTRING_ON_ARRAY,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR,BX_BOXING_IMMEDIATELY_UNBOXED,BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION,IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD"
	    />

  <Detector class="edu.umd.cs.findbugs.detect.FindSleepWithLockHeld"
		speed="slow"
		reports="SWL_SLEEP_WITH_LOCK_HELD"
	 />
	 
  <Detector class="edu.umd.cs.findbugs.detect.InefficientMemberAccess"
  		speed="fast" 
  		disabled="true" 
  		reports="IMA_INEFFICIENT_MEMBER_ACCESS"
  	 />
  			
  <Detector class="edu.umd.cs.findbugs.detect.DuplicateBranches"
  			speed="fast"
  			reports="DB_DUPLICATE_BRANCHES,DB_DUPLICATE_SWITCH_CLAUSES"/>

  <Detector class="edu.umd.cs.findbugs.detect.XMLFactoryBypass"
  			speed="fast"
  			reports="XFB_XML_FACTORY_BYPASS"/>

  <Detector class="edu.umd.cs.findbugs.detect.FindBadEqualsImplementation"
            speed="slow"
            disabled="true"
            hidden="true"
            reports="NP_DOES_NOT_HANDLE_NULL"/>

  <Detector class="edu.umd.cs.findbugs.detect.UselessSubclassMethod"
  			speed="fast"
  			disabled="true"
  			reports="USM_USELESS_SUBCLASS_METHOD,USM_USELESS_ABSTRACT_METHOD"/>
  			
  <Detector class="edu.umd.cs.findbugs.detect.ConfusedInheritance"
  			speed="fast"
  			reports="CI_CONFUSED_INHERITANCE"/>

  <Detector class="edu.umd.cs.findbugs.detect.QuestionableBooleanAssignment"
  			speed="fast"
  			reports="QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT"/>


  <Detector class="edu.umd.cs.findbugs.detect.TrainUnconditionalDerefParams"
            hidden="true" speed="slow" reports=""/>
			
  <Detector class="edu.umd.cs.findbugs.detect.TrainFieldStoreTypes"
	        hidden="true" speed="slow" reports=""/>

  <Detector class="edu.umd.cs.findbugs.detect.TrainNonNullAnnotations"
            hidden="true" speed="fast" reports=""/>

  <Detector class="edu.umd.cs.findbugs.detect.CheckCalls"
	        speed="fast" reports="" disabled="true" hidden="true"/>
	        
  <Detector class="edu.umd.cs.findbugs.detect.FindBugsSummaryStats" 
            speed="fast"
            hidden="true" />
  
  <Detector class="edu.umd.cs.findbugs.detect.TestASM" speed="fast" disabled="true" reports="TESTING" />

  <Detector class="edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer" 
            speed="fast"
            reports="GC_UNRELATED_TYPES" />

       <Detector class="edu.umd.cs.findbugs.detect.StaticCalendarDetector" speed="fast"  reports="STCAL_STATIC_CALENDAR_INSTANCE,STCAL_STATIC_SIMPLE_DATA_FORMAT_INSTANCE,STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE,STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE"/>

  <Detector class="edu.umd.cs.findbugs.detect.TestDataflowAnalysis"
	speed="slow" reports="" disabled="true" hidden="true"/>
	
  <Detector class="edu.umd.cs.findbugs.detect.CheckTypeQualifiers"
    speed="slow" reports="CTQ_INCONSISTENT_USE"/>

       <BugPattern abbrev="STCAL" type="STCAL_STATIC_CALENDAR_INSTANCE" category="MT_CORRECTNESS" />
       <BugPattern abbrev="STCAL" type="STCAL_STATIC_SIMPLE_DATA_FORMAT_INSTANCE" category="MT_CORRECTNESS" />
       <BugPattern abbrev="STCAL" type="STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE" category="MT_CORRECTNESS" />
       <BugPattern abbrev="STCAL" type="STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE" category="MT_CORRECTNESS" />

	<BugPattern abbrev="NP" type="NP_SYNC_AND_NULL_CHECK_FIELD" category="MT_CORRECTNESS" />

  <BugPattern abbrev="VR" type="VR_UNRESOLVABLE_REFERENCE" category="CORRECTNESS"
    experimental="true"/>

  <BugPattern abbrev="SW" type="SW_SWING_METHODS_INVOKED_IN_SWING_THREAD" category="BAD_PRACTICE"/>
  <BugPattern abbrev="IL" type="IL_INFINITE_LOOP" category="CORRECTNESS" />

  <BugPattern abbrev="IL" type="IL_INFINITE_RECURSIVE_LOOP" category="CORRECTNESS" />
  <BugPattern abbrev="FI" type="FI_FINALIZER_ONLY_NULLS_FIELDS" category="BAD_PRACTICE"/>
  <BugPattern abbrev="FI" type="FI_FINALIZER_NULLS_FIELDS" category="BAD_PRACTICE"/>
  <BugPattern abbrev="IL" type="IL_CONTAINER_ADDED_TO_ITSELF" category="CORRECTNESS"/>
  <BugPattern abbrev="VO" type="VO_VOLATILE_REFERENCE_TO_ARRAY" category="MT_CORRECTNESS"/>
  <BugPattern abbrev="UI" type="UI_INHERITANCE_UNSAFE_GETRESOURCE" category="BAD_PRACTICE"/>
  <BugPattern abbrev="HSC" type="HSC_HUGE_SHARED_STRING_CONSTANT" category="PERFORMANCE" />
  <BugPattern abbrev="TEST" type="TESTING" category="CORRECTNESS" />
  <BugPattern abbrev="TEST" type="UNKNOWN" category="CORRECTNESS" />
  <BugPattern abbrev="AM" type="AM_CREATES_EMPTY_ZIP_FILE_ENTRY" category="BAD_PRACTICE" />

  <BugPattern abbrev="AM" type="AM_CREATES_EMPTY_JAR_FILE_ENTRY" category="BAD_PRACTICE" />

  <BugPattern abbrev="DP" type="DP_DO_INSIDE_DO_PRIVILEGED" category="BAD_PRACTICE" />
  <BugPattern abbrev="DP" type="DP_DO_INSIDE_DO_PRIVILEDGED" category="BAD_PRACTICE" 
         experimental="true" />  <!-- deprecated in favor of DP_DO_INSIDE_DO_PRIVILEGED (no D before G) -->
  <BugPattern abbrev="DP" type="DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED" category="BAD_PRACTICE" />
  <BugPattern abbrev="DP" type="DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED" category="BAD_PRACTICE"
         experimental="true" />  <!-- deprecated in favor of DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED (no D before G) -->
  
  <BugPattern abbrev="IMSE" type="IMSE_DONT_CATCH_IMSE" category="BAD_PRACTICE" />
  <BugPattern abbrev="FL" type="FL_MATH_USING_FLOAT_PRECISION" category="CORRECTNESS" />
  <BugPattern abbrev="CN" type="CN_IDIOM" category="BAD_PRACTICE" />
  <BugPattern abbrev="CN" type="CN_IDIOM_NO_SUPER_CALL" category="BAD_PRACTICE" />
  <BugPattern abbrev="DE" type="DE_MIGHT_DROP" category="BAD_PRACTICE" />
  <BugPattern abbrev="DE" type="DE_MIGHT_IGNORE" category="BAD_PRACTICE" />
  <BugPattern abbrev="Dm" type="DM_EXIT" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER" category="BAD_PRACTICE" />
  <BugPattern abbrev="JCIP" type="JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS" category="CORRECTNESS" />
  <BugPattern abbrev="Dm" type="DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED" category="STYLE" />
  <BugPattern abbrev="Dm" type="DMI_BLOCKING_METHODS_ON_URL" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DMI_COLLECTION_OF_URLS" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION" category="CORRECTNESS" />
  <BugPattern abbrev="Dm" type="DM_RUN_FINALIZERS_ON_EXIT" category="BAD_PRACTICE" />
  <BugPattern abbrev="Dm" type="DM_STRING_CTOR" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_STRING_VOID_CTOR" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_STRING_TOSTRING" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_GC" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_BOOLEAN_CTOR" category="PERFORMANCE" />
  <BugPattern abbrev="Bx" type="DM_NUMBER_CTOR" category="PERFORMANCE" />
  <BugPattern abbrev="Bx" type="DM_FP_NUMBER_CTOR" category="PERFORMANCE" />  
  <BugPattern abbrev="Dm" type="DM_STRING_EMPTY_EQUALS" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_CONVERT_CASE" category="I18N" />
  <BugPattern abbrev="Bx" type="DM_BOXED_PRIMITIVE_TOSTRING" category="PERFORMANCE" />
  <BugPattern abbrev="Bx" type="BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR" category="CORRECTNESS" />
  <BugPattern abbrev="Bx" type="BX_BOXING_IMMEDIATELY_UNBOXED" category="PERFORMANCE" />
  <BugPattern abbrev="Bx" type="BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_NEW_FOR_GETCLASS" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_MONITOR_WAIT_ON_CONDITION" category="MT_CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_ARGUMENT_MIGHT_BE_NULL" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT" category="BAD_PRACTICE" />
  <BugPattern abbrev="NP" type="NP_IMMEDIATE_DEREFERENCE_OF_READLINE" category="STYLE" />
  <BugPattern abbrev="RV" type="RV_ABSOLUTE_VALUE_OF_RANDOM_INT" category="CORRECTNESS" />
  <BugPattern abbrev="RV" type="RV_ABSOLUTE_VALUE_OF_HASHCODE" category="CORRECTNESS" />
  <BugPattern abbrev="RV" type="RV_REM_OF_RANDOM_INT" category="STYLE" />
  <BugPattern abbrev="RV" type="RV_REM_OF_HASHCODE" category="STYLE" />
  <BugPattern abbrev="RV" type="RV_01_TO_INT" category="CORRECTNESS" />
  <BugPattern abbrev="Dm" type="DM_NEXTINT_VIA_NEXTDOUBLE" category="PERFORMANCE" />
  <BugPattern abbrev="Dm" type="DM_USELESS_THREAD" category="MT_CORRECTNESS" />
  <BugPattern abbrev="SQL" type="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE" category="BAD_PRACTICE" />
  <BugPattern abbrev="SQL" type="SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" category="BAD_PRACTICE" />
  <BugPattern abbrev="DC" type="DC_DOUBLECHECK" category="MT_CORRECTNESS" />
  <BugPattern abbrev="FI" type="FI_PUBLIC_SHOULD_BE_PROTECTED" category="MALICIOUS_CODE" />
  <BugPattern abbrev="FI" type="FI_EMPTY" category="BAD_PRACTICE" />
  <BugPattern abbrev="FI" type="FI_NULLIFY_SUPER" category="BAD_PRACTICE" />
  <BugPattern abbrev="FI" type="FI_USELESS" category="BAD_PRACTICE" />
  <BugPattern abbrev="FI" type="FI_MISSING_SUPER_CALL" category="BAD_PRACTICE" />
  <BugPattern abbrev="FI" type="FI_EXPLICIT_INVOCATION" category="BAD_PRACTICE" />
  <BugPattern abbrev="Eq" type="EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC" category="CORRECTNESS" />
  <BugPattern abbrev="Eq" type="EQ_DONT_DEFINE_EQUALS_FOR_ENUM" category="CORRECTNESS" />
  <BugPattern abbrev="Eq" type="EQ_SELF_USE_OBJECT" category="BAD_PRACTICE" />
  <BugPattern abbrev="Eq" type="EQ_SELF_NO_OBJECT" category="BAD_PRACTICE" />
  <BugPattern abbrev="NP" type="NP_DOES_NOT_HANDLE_NULL" category="BAD_PRACTICE"/>
  <BugPattern abbrev="Co" type="CO_SELF_NO_OBJECT" category="BAD_PRACTICE" />
  <BugPattern abbrev="ES" type="ES_COMPARING_STRINGS_WITH_EQ" category="BAD_PRACTICE" />
  <BugPattern abbrev="ES" type="ES_COMPARING_PARAMETER_STRING_WITH_EQ" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_USE_OF_UNHASHABLE_CLASS" category="CORRECTNESS" />
  <BugPattern abbrev="Eq" type="EQ_COMPARETO_USE_OBJECT_EQUALS" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_HASHCODE_USE_OBJECT_EQUALS" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_HASHCODE_NO_EQUALS" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_EQUALS_USE_HASHCODE" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_INHERITS_EQUALS_USE_HASHCODE" category="BAD_PRACTICE" />
  <BugPattern abbrev="HE" type="HE_EQUALS_NO_HASHCODE" category="BAD_PRACTICE" />
  <BugPattern abbrev="Eq" type="EQ_ABSTRACT_SELF" category="BAD_PRACTICE" />
  <BugPattern abbrev="Co" type="CO_ABSTRACT_SELF" category="BAD_PRACTICE" />
  <BugPattern abbrev="DL" type="DL_SYNCHRONIZATION_ON_SHARED_CONSTANT" category="MT_CORRECTNESS" />
  <BugPattern abbrev="ESync" type="ESync_EMPTY_SYNC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="IS" type="IS2_INCONSISTENT_SYNC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="NN" type="NN_NAKED_NOTIFY" category="MT_CORRECTNESS" />
  <BugPattern abbrev="MS" type="MS_EXPOSE_REP" category="MALICIOUS_CODE" />
  <BugPattern abbrev="EI" type="EI_EXPOSE_REP" category="MALICIOUS_CODE" />
  <BugPattern abbrev="EI2" type="EI_EXPOSE_REP2" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="EI_EXPOSE_STATIC_REP2" category="MALICIOUS_CODE" />
  <BugPattern abbrev="Ru" type="RU_INVOKE_RUN" category="MT_CORRECTNESS" />
  <BugPattern abbrev="SP" type="SP_SPIN_ON_FIELD" category="MT_CORRECTNESS" />
  <BugPattern abbrev="NS" type="NS_NON_SHORT_CIRCUIT" category="BAD_PRACTICE" />
  <BugPattern abbrev="NS" type="NS_DANGEROUS_NON_SHORT_CIRCUIT" category="CORRECTNESS" />
  <BugPattern abbrev="TLW" type="TLW_TWO_LOCK_WAIT" category="MT_CORRECTNESS" />
  <BugPattern abbrev="TLW" type="TLW_TWO_LOCK_NOTIFY" category="MT_CORRECTNESS"
         experimental="true" />  <!-- has never been generated -->
  <BugPattern abbrev="UW" type="UW_UNCOND_WAIT" category="MT_CORRECTNESS" />
  <BugPattern abbrev="UR" type="UR_UNINIT_READ" category="CORRECTNESS" />
  <BugPattern abbrev="UG" type="UG_SYNC_SET_UNSYNC_GET" category="MT_CORRECTNESS" />
  <BugPattern abbrev="IC" type="IC_INIT_CIRCULARITY" category="STYLE" />
  <BugPattern abbrev="IC" type="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION" category="BAD_PRACTICE" />
  <BugPattern abbrev="SI" type="SI_INSTANCE_BEFORE_FINALS_ASSIGNED" category="BAD_PRACTICE" />
  <BugPattern abbrev="It" type="IT_NO_SUCH_ELEMENT" category="BAD_PRACTICE" />
  <BugPattern abbrev="IS" type="IS_INCONSISTENT_SYNC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="IS" type="IS_FIELD_NOT_GUARDED" category="MT_CORRECTNESS" />
  <BugPattern abbrev="ML" type="ML_SYNC_ON_UPDATED_FIELD" category="MT_CORRECTNESS" />
  <BugPattern abbrev="MS" type="MS_OOI_PKGPROTECT" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_FINAL_PKGPROTECT" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_SHOULD_BE_FINAL" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_PKGPROTECT" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_MUTABLE_HASHTABLE" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_MUTABLE_ARRAY" category="MALICIOUS_CODE" />
  <BugPattern abbrev="MS" type="MS_CANNOT_BE_FINAL" category="MALICIOUS_CODE" />
  <BugPattern abbrev="Nm" type="NM_METHOD_NAMING_CONVENTION" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_FIELD_NAMING_CONVENTION" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_CLASS_NAMING_CONVENTION" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_VERY_CONFUSING" category="CORRECTNESS" />
  <BugPattern abbrev="Nm" type="NM_VERY_CONFUSING_INTENTIONAL" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_CONFUSING" category="BAD_PRACTICE" />
  <BugPattern abbrev="Nm" type="NM_METHOD_CONSTRUCTOR_CONFUSION" category="CORRECTNESS" />
  <BugPattern abbrev="Nm" type="NM_LCASE_HASHCODE" category="CORRECTNESS" />
  <BugPattern abbrev="Nm" type="NM_LCASE_TOSTRING" category="CORRECTNESS" />
  <BugPattern abbrev="Nm" type="NM_BAD_EQUAL" category="CORRECTNESS"/>
  <BugPattern abbrev="IA" type="IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD" category="STYLE"/>
  <BugPattern abbrev="Nm" type="NM_CLASS_NOT_EXCEPTION" category="BAD_PRACTICE"/>
  <BugPattern abbrev="RR" type="RR_NOT_CHECKED" category="BAD_PRACTICE" />
  <BugPattern abbrev="RR" type="SR_NOT_CHECKED" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS" category="STYLE" />
  <BugPattern abbrev="Se" type="SE_NO_SUITABLE_CONSTRUCTOR" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" category="BAD_PRACTICE" />
  <BugPattern abbrev="SnVI" type="SE_NO_SERIALVERSIONID" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_READ_RESOLVE_MUST_RETURN_OBJECT" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_TRANSIENT_FIELD_NOT_RESTORED" category="BAD_PRACTICE" />
  <BugPattern abbrev="WS" type="WS_WRITEOBJECT_SYNC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="RS" type="RS_READOBJECT_SYNC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="Se" type="SE_NONFINAL_SERIALVERSIONID" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_NONSTATIC_SERIALVERSIONID" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_NONLONG_SERIALVERSIONID" category="BAD_PRACTICE" />
   <BugPattern abbrev="Se" type="SE_METHOD_MUST_BE_PRIVATE" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_BAD_FIELD" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_INNER_CLASS" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_BAD_FIELD_INNER_CLASS" category="BAD_PRACTICE" />
  <BugPattern abbrev="Se" type="SE_BAD_FIELD_STORE" category="BAD_PRACTICE" />
  <BugPattern abbrev="SC" type="SC_START_IN_CTOR" category="MT_CORRECTNESS" />
  <BugPattern abbrev="SF" type="SF_SWITCH_FALLTHROUGH" category="STYLE" />
  <BugPattern abbrev="SF" type="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH" category="CORRECTNESS" />
  <BugPattern abbrev="SS" type="SS_SHOULD_BE_STATIC" category="PERFORMANCE" />
  <BugPattern abbrev="UuF" type="UUF_UNUSED_FIELD" category="PERFORMANCE" />
  <BugPattern abbrev="UrF" type="URF_UNREAD_FIELD" category="PERFORMANCE" />
  <BugPattern abbrev="QF" type="QF_QUESTIONABLE_FOR_LOOP" category="STYLE" />
  <BugPattern abbrev="NP" type="NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" category="STYLE"
         experimental="true" />  <!-- deprecated in favor of UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR -->
  <BugPattern abbrev="NP" type="NP_UNWRITTEN_FIELD" category="CORRECTNESS" />
  <BugPattern abbrev="UwF" type="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" category="STYLE" />
  <BugPattern abbrev="UwF" type="UWF_NULL_FIELD" category="CORRECTNESS" />
  <BugPattern abbrev="UwF" type="UWF_UNWRITTEN_FIELD" category="CORRECTNESS" />
  <BugPattern abbrev="SIC" type="SIC_INNER_SHOULD_BE_STATIC" category="PERFORMANCE" />
  <BugPattern abbrev="SIC" type="SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" category="PERFORMANCE" />
  <BugPattern abbrev="SIC" type="SIC_INNER_SHOULD_BE_STATIC_ANON" category="PERFORMANCE" />
  <BugPattern abbrev="Wa" type="WA_NOT_IN_LOOP" category="MT_CORRECTNESS" />
  <BugPattern abbrev="Wa" type="WA_AWAIT_NOT_IN_LOOP" category="MT_CORRECTNESS" />
  <BugPattern abbrev="No" type="NO_NOTIFY_NOT_NOTIFYALL" category="MT_CORRECTNESS" />
  <BugPattern abbrev="RV" type="RV_RETURN_VALUE_IGNORED" category="CORRECTNESS" />
  <BugPattern abbrev="RV" type="RV_RETURN_VALUE_IGNORED2" category="CORRECTNESS" />
  <BugPattern abbrev="RV" type="RV_CHECK_FOR_POSITIVE_INDEXOF" category="STYLE" />
  <BugPattern abbrev="RV" type="RV_DONT_JUST_NULL_CHECK_READLINE" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_ALWAYS_NULL" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_STORE_INTO_NONNULL_FIELD" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_ALWAYS_NULL_EXCEPTION" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" category="STYLE" />
  <BugPattern abbrev="NP" type="NP_NULL_ON_SOME_PATH" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_NULL_ON_SOME_PATH_EXCEPTION" category="CORRECTNESS" />
  <BugPattern abbrev="NP" type="NP_NULL_PARAM_DEREF" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_NULL_PARAM_DEREF_NONVIRTUAL" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_NONNULL_PARAM_VIOLATION" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_NONNULL_RETURN_VIOLATION" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_TOSTRING_COULD_RETURN_NULL" category="BAD_PRACTICE"/>
  <BugPattern abbrev="NP" type="NP_CLONE_COULD_RETURN_NULL" category="BAD_PRACTICE"/>
  <BugPattern abbrev="NP" type="NP_LOAD_OF_KNOWN_NULL_VALUE" category="STYLE"/>
  <BugPattern abbrev="NP" type="NP_GUARANTEED_DEREF" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH" category="CORRECTNESS"/>
  <BugPattern abbrev="OS" type="OS_OPEN_STREAM" category="BAD_PRACTICE" />
  <BugPattern abbrev="OS" type="OS_OPEN_STREAM_EXCEPTION_PATH" category="BAD_PRACTICE" />
  <BugPattern abbrev="PZLA" type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" category="STYLE" />
  <BugPattern abbrev="UCF" type="UCF_USELESS_CONTROL_FLOW" category="STYLE" />
  <BugPattern abbrev="UCF" type="UCF_USELESS_CONTROL_FLOW_NEXT_LINE" category="CORRECTNESS" />
  <BugPattern abbrev="RCN" type="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE" category="STYLE" />
  <BugPattern abbrev="RCN" type="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE" category="CORRECTNESS" />
  <BugPattern abbrev="RCN" type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" category="STYLE" />
  <BugPattern abbrev="RCN" type="RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES" category="STYLE" />
  <BugPattern abbrev="RCN" type="RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE" category="STYLE" />
  <BugPattern abbrev="UL" type="UL_UNRELEASED_LOCK" category="MT_CORRECTNESS" />
  <BugPattern abbrev="UL" type="UL_UNRELEASED_LOCK_EXCEPTION_PATH" category="MT_CORRECTNESS" />
  <BugPattern abbrev="RC" type="RC_REF_COMPARISON" category="CORRECTNESS" />
  <BugPattern abbrev="VA" type="VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG" category="CORRECTNESS"/>
  <BugPattern abbrev="EC" type="EC_UNRELATED_TYPES" category="CORRECTNESS"/>
  <BugPattern abbrev="EC" type="EC_ARRAY_AND_NONARRAY" category="CORRECTNESS"/>
  <BugPattern abbrev="EC" type="EC_NULL_ARG" category="CORRECTNESS"/>
  <BugPattern abbrev="EC" type="EC_UNRELATED_INTERFACES" category="CORRECTNESS"/>
  <BugPattern abbrev="EC" type="EC_UNRELATED_CLASS_AND_INTERFACE" category="CORRECTNESS"/>
  <BugPattern abbrev="MWN" type="MWN_MISMATCHED_WAIT" category="MT_CORRECTNESS" />
  <BugPattern abbrev="MWN" type="MWN_MISMATCHED_NOTIFY" category="MT_CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_LOCAL_SELF_ASSIGNMENT" category="STYLE" />
  <BugPattern abbrev="INT" type="INT_BAD_COMPARISON_WITH_SIGNED_BYTE"    category="CORRECTNESS" />
  <BugPattern abbrev="INT" type="INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE"    category="CORRECTNESS" />
  <BugPattern abbrev="INT" type="INT_BAD_REM_BY_1"    category="CORRECTNESS" />
  <BugPattern abbrev="INT" type="INT_VACUOUS_COMPARISON"    category="STYLE" />
  <BugPattern abbrev="BIT" type="BIT_IOR_OF_SIGNED_BYTE"    category="CORRECTNESS" />
  <BugPattern abbrev="BIT" type="BIT_AND"    category="CORRECTNESS" />
  <BugPattern abbrev="BIT" type="BIT_AND_ZZ" category="CORRECTNESS" />
  <BugPattern abbrev="BIT" type="BIT_IOR"    category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_FIELD_SELF_ASSIGNMENT" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_LOCAL_DOUBLE_ASSIGNMENT" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_FIELD_DOUBLE_ASSIGNMENT" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_FIELD_SELF_COMPUTATION" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_LOCAL_SELF_COMPUTATION" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_FIELD_SELF_COMPARISON" category="CORRECTNESS" />
  <BugPattern abbrev="SA" type="SA_LOCAL_SELF_COMPARISON" category="CORRECTNESS" />
  <BugPattern abbrev="LI" type="LI_LAZY_INIT_INSTANCE" category="MT_CORRECTNESS"
         experimental="true" />  <!-- has never been generated? -->
  <BugPattern abbrev="LI" type="LI_LAZY_INIT_STATIC" category="MT_CORRECTNESS" />
  <BugPattern abbrev="JLM" type="JLM_JSR166_LOCK_MONITORENTER" category="MT_CORRECTNESS" />
  <BugPattern abbrev="UPM" type="UPM_UNCALLED_PRIVATE_METHOD" category="PERFORMANCE"/>
  <BugPattern abbrev="UMAC" type="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS" category="CORRECTNESS"/>
  <BugPattern abbrev="ODR" type="ODR_OPEN_DATABASE_RESOURCE" category="BAD_PRACTICE" />
  <BugPattern abbrev="ODR" type="ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH" category="BAD_PRACTICE" />
  <BugPattern abbrev="SBSC" type="SBSC_USE_STRINGBUFFER_CONCATENATION" category="PERFORMANCE" />
  <BugPattern abbrev="ITA" type="ITA_INEFFICIENT_TO_ARRAY" category="PERFORMANCE" />
  <BugPattern abbrev="IJU" type="IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD" category="CORRECTNESS" />
  <BugPattern abbrev="IJU" type="IJU_BAD_SUITE_METHOD" category="CORRECTNESS" />
  <BugPattern abbrev="IJU" type="IJU_SETUP_NO_SUPER" category="CORRECTNESS" />
  <BugPattern abbrev="IJU" type="IJU_TEARDOWN_NO_SUPER" category="CORRECTNESS" />
  <BugPattern abbrev="IJU" type="IJU_SUITE_NOT_STATIC" category="CORRECTNESS" />
  <BugPattern abbrev="IJU" type="IJU_NO_TESTS" category="CORRECTNESS" />
  <BugPattern abbrev="BOA" type="BOA_BADLY_OVERRIDDEN_ADAPTER" category="CORRECTNESS" />
  <BugPattern abbrev="SQL" type="BRSA_BAD_RESULTSET_ACCESS" category="CORRECTNESS"
         experimental="true" />  <!-- deprecated in favor of SQL_BAD_RESULTSET_ACCESS -->
  <BugPattern abbrev="SQL" type="SQL_BAD_RESULTSET_ACCESS" category="CORRECTNESS"/>
  <BugPattern abbrev="SQL" type="SQL_BAD_PREPARED_STATEMENT_ACCESS" category="CORRECTNESS" />
  <BugPattern abbrev="SIO" type="SIO_SUPERFLUOUS_INSTANCEOF" category="CORRECTNESS"/>
  <BugPattern abbrev="BAC" type="BAC_BAD_APPLET_CONSTRUCTOR" category="CORRECTNESS"
    experimental="true"/>
  <BugPattern abbrev="UOE" type="UOE_USE_OBJECT_EQUALS" category="STYLE"
        experimental="true"/>
  <BugPattern abbrev="EC" type="EC_BAD_ARRAY_COMPARE" category="CORRECTNESS"/>
  <BugPattern abbrev="STI" type="STI_INTERRUPTED_ON_CURRENTTHREAD" category="CORRECTNESS"/>
  <BugPattern abbrev="STI" type="STI_INTERRUPTED_ON_UNKNOWNTHREAD" category="CORRECTNESS"/>
  <BugPattern abbrev="DLS" type="DLS_DEAD_LOCAL_STORE" category="STYLE"/>
  <BugPattern abbrev="DLS" type="DLS_DEAD_LOCAL_STORE_OF_NULL" category="STYLE"/>
  <BugPattern abbrev="IP" type="IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN" category="CORRECTNESS"/>
  <BugPattern abbrev="MF" type="MF_METHOD_MASKS_FIELD" category="CORRECTNESS"/>
  <BugPattern abbrev="MF" type="MF_CLASS_MASKS_FIELD" category="CORRECTNESS"/>
  <BugPattern abbrev="WMI" type="WMI_WRONG_MAP_ITERATOR" category="PERFORMANCE"/>
  <BugPattern abbrev="ISC" type="ISC_INSTANTIATE_STATIC_CLASS" category="BAD_PRACTICE"/>
  <BugPattern abbrev="REC" type="REC_CATCH_EXCEPTION" category="STYLE"/>
  <BugPattern abbrev="FE" type="FE_FLOATING_POINT_EQUALITY" category="STYLE"/>
  <BugPattern abbrev="FE" type="FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER" category="CORRECTNESS"/>
  <BugPattern abbrev="UM" type="UM_UNNECESSARY_MATH" category="PERFORMANCE"/>
  <BugPattern abbrev="CD" type="CD_CIRCULAR_DEPENDENCY" category="STYLE"
        experimental="true"/>
  <BugPattern abbrev="RI" type="RI_REDUNDANT_INTERFACES" category="STYLE"/>
  <BugPattern abbrev="MTIA" type="MTIA_SUSPECT_STRUTS_INSTANCE_FIELD" category="STYLE"/>
  <BugPattern abbrev="MTIA" type="MTIA_SUSPECT_SERVLET_INSTANCE_FIELD" category="STYLE"/>
  <BugPattern abbrev="PS" type="PS_PUBLIC_SEMAPHORES" category="STYLE"/>
  <BugPattern abbrev="ICAST" type="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG" category="STYLE"/>
  <BugPattern abbrev="ICAST" type="ICAST_IDIV_CAST_TO_DOUBLE" category="STYLE"/>
  <BugPattern abbrev="ICAST" type="ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL" category="CORRECTNESS"/>
  <BugPattern abbrev="ICAST" type="ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="NP_NULL_INSTANCEOF" category="CORRECTNESS"/>
  <BugPattern abbrev="NP" type="BC_NULL_INSTANCEOF" category="CORRECTNESS"
         experimental="true" />  <!-- deprecated in favor of NP_NULL_INSTANCEOF -->
  <BugPattern abbrev="BC" type="DMI_RANDOM_USED_ONLY_ONCE" category="BAD_PRACTICE"/>
  <BugPattern abbrev="DMI" type="DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT" category="CORRECTNESS"/>
  <BugPattern abbrev="BC" type="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS" category="BAD_PRACTICE"/>
  <BugPattern abbrev="BC" type="BC_BAD_CAST_TO_CONCRETE_COLLECTION" category="STYLE"/>
  <BugPattern abbrev="BC" type="BC_UNCONFIRMED_CAST" category="STYLE"/>
  <BugPattern abbrev="BC" type="BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY" category="CORRECTNESS"/>  <!-- deprecated in favor of BC_IMPOSSIBLE_CAST -->
  <BugPattern abbrev="BC" type="BC_IMPOSSIBLE_CAST" category="CORRECTNESS"/>
  <BugPattern abbrev="BC" type="BC_IMPOSSIBLE_INSTANCEOF" category="CORRECTNESS"/>
  <BugPattern abbrev="BC" type="BC_VACUOUS_INSTANCEOF" category="STYLE"/>
  <BugPattern abbrev="BC" type="BC_BAD_CAST_TO_ABSTRACT_COLLECTION" category="STYLE"/>
  <BugPattern abbrev="RE" type="RE_POSSIBLE_UNINTENDED_PATTERN" category="CORRECTNESS"/>
  <BugPattern abbrev="RE" type="RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION" category="CORRECTNESS"/>
  <BugPattern abbrev="RE" type="RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION" category="CORRECTNESS"/>
  <BugPattern abbrev="DLS" type="DLS_OVERWRITTEN_INCREMENT" category="CORRECTNESS"/>
  <BugPattern abbrev="ICAST" type="ICAST_BAD_SHIFT_AMOUNT" category="CORRECTNESS"/>
  <BugPattern abbrev="IM" type="IM_MULTIPLYING_RESULT_OF_IREM" category="CORRECTNESS"/>
  <BugPattern abbrev="IM" type="IM_BAD_CHECK_FOR_ODD" category="STYLE"/>
  <BugPattern abbrev="IM" type="IM_AVERAGE_COMPUTATION_COULD_OVERFLOW" category="STYLE"/>
  <BugPattern abbrev="DMI" type="DMI_INVOKING_TOSTRING_ON_ARRAY" category="CORRECTNESS"/>
  <BugPattern abbrev="ICAST" type="ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT" category="STYLE"/>
  <BugPattern abbrev="DMI" type="DMI_HARDCODED_ABSOLUTE_FILENAME" category="STYLE"/>
  <BugPattern abbrev="DMI" type="DMI_BAD_MONTH" category="CORRECTNESS"/>
  <BugPattern abbrev="DMI" type="DMI_USELESS_SUBSTRING" category="STYLE"/>
  <BugPattern abbrev="DMI" type="DMI_CALLING_NEXT_FROM_HASNEXT" category="CORRECTNESS"/>
  <BugPattern abbrev="ST" type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" category="STYLE"/>
  <BugPattern abbrev="SWL" type="SWL_SLEEP_WITH_LOCK_HELD" category="MT_CORRECTNESS"/>
  <BugPattern abbrev="J2EE" type="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION" category="BAD_PRACTICE"/>
  <BugPattern abbrev="DMI" type="DMI_NONSERIALIZABLE_OBJECT_WRITTEN" category="STYLE"/>
  <BugPattern abbrev="DB" type="DB_DUPLICATE_BRANCHES" category="STYLE"/>
  <BugPattern abbrev="DB" type="DB_DUPLICATE_SWITCH_CLAUSES" category="STYLE"/>
  <BugPattern abbrev="IMA" type="IMA_INEFFICIENT_MEMBER_ACCESS" category="PERFORMANCE"
        experimental="true"/>
  <BugPattern abbrev="XFB" type="XFB_XML_FACTORY_BYPASS" category="STYLE"/>
  <BugPattern abbrev="USM" type="USM_USELESS_SUBCLASS_METHOD" category="STYLE"
        experimental="true"/>
  <BugPattern abbrev="USM" type="USM_USELESS_ABSTRACT_METHOD" category="STYLE"
        experimental="true"/>
  <BugPattern abbrev="CI" type="CI_CONFUSED_INHERITANCE" category="STYLE"/>
  <BugPattern abbrev="QBA" type="QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT" category="CORRECTNESS"/>
  <BugPattern abbrev="GC" type="GC_UNRELATED_TYPES" category="CORRECTNESS"/>
  <BugPattern abbrev="CTQ" type="CTQ_INCONSISTENT_USE" category="CORRECTNESS"/>  
</FindbugsPlugin>
